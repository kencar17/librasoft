0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'install',
1 verbose cli   'elixir-lang/elixir' ]
2 info using npm@2.14.7
3 info using node@v4.2.1
4 verbose install initial load of /Users/Jake/Desktop/librasoft/package.json
5 verbose installManyTop reading scoped package data from /Users/Jake/Desktop/librasoft/node_modules/bootstrap-sass/package.json
6 verbose installManyTop reading scoped package data from /Users/Jake/Desktop/librasoft/node_modules/gulp/package.json
7 verbose installManyTop reading scoped package data from /Users/Jake/Desktop/librasoft/node_modules/laravel-elixir/package.json
8 verbose readDependencies loading dependencies from /Users/Jake/Desktop/librasoft/package.json
9 silly cache add args [ 'elixir-lang/elixir', null ]
10 verbose cache add spec elixir-lang/elixir
11 silly cache add parsed spec Result {
11 silly cache add   raw: 'elixir-lang/elixir',
11 silly cache add   scope: null,
11 silly cache add   name: null,
11 silly cache add   rawSpec: 'elixir-lang/elixir',
11 silly cache add   spec: 'github:elixir-lang/elixir',
11 silly cache add   type: 'hosted',
11 silly cache add   hosted:
11 silly cache add    { type: 'github',
11 silly cache add      ssh: 'git@github.com:elixir-lang/elixir.git',
11 silly cache add      sshUrl: 'git+ssh://git@github.com/elixir-lang/elixir.git',
11 silly cache add      httpsUrl: 'git+https://github.com/elixir-lang/elixir.git',
11 silly cache add      gitUrl: 'git://github.com/elixir-lang/elixir.git',
11 silly cache add      shortcut: 'github:elixir-lang/elixir',
11 silly cache add      directUrl: 'https://raw.githubusercontent.com/elixir-lang/elixir/master/package.json' } }
12 verbose addRemoteGit caching elixir-lang/elixir
13 verbose addRemoteGit elixir-lang/elixir is a repository hosted by github
14 silly tryGitProto attempting to clone git://github.com/elixir-lang/elixir.git
15 silly tryClone cloning elixir-lang/elixir via git://github.com/elixir-lang/elixir.git
16 verbose tryClone git-github-com-elixir-lang-elixir-git-fe479758 not in flight; caching
17 verbose makeDirectory /Users/Jake/.npm/_git-remotes creation not in flight; initializing
18 silly makeDirectory /Users/Jake/.npm/_git-remotes uid: 501 gid: 20
19 info git [ 'clone',
19 info git   '--template=/Users/Jake/.npm/_git-remotes/_templates',
19 info git   '--mirror',
19 info git   'git://github.com/elixir-lang/elixir.git',
19 info git   '/Users/Jake/.npm/_git-remotes/git-github-com-elixir-lang-elixir-git-fe479758' ]
20 verbose mirrorRemote elixir-lang/elixir git clone git://github.com/elixir-lang/elixir.git
21 verbose setPermissions elixir-lang/elixir set permissions on /Users/Jake/.npm/_git-remotes/git-github-com-elixir-lang-elixir-git-fe479758
22 verbose resolveHead elixir-lang/elixir original treeish: master
23 info git [ 'rev-list', '-n1', 'master' ]
24 silly resolveHead elixir-lang/elixir resolved treeish: b806511b887776c1f9ab349a377350b8c9c069f1
25 verbose resolveHead elixir-lang/elixir resolved Git URL: git://github.com/elixir-lang/elixir.git#b806511b887776c1f9ab349a377350b8c9c069f1
26 silly resolveHead Git working directory: /var/folders/k3/7qbqfpr96d914l00mt4fmlgw0000gn/T/npm-45133-bdeb96d3/git-cache-a5be8bcc9ddf/b806511b887776c1f9ab349a377350b8c9c069f1
27 info git [ 'clone',
27 info git   '/Users/Jake/.npm/_git-remotes/git-github-com-elixir-lang-elixir-git-fe479758',
27 info git   '/var/folders/k3/7qbqfpr96d914l00mt4fmlgw0000gn/T/npm-45133-bdeb96d3/git-cache-a5be8bcc9ddf/b806511b887776c1f9ab349a377350b8c9c069f1' ]
28 verbose cloneResolved elixir-lang/elixir clone Cloning into '/var/folders/k3/7qbqfpr96d914l00mt4fmlgw0000gn/T/npm-45133-bdeb96d3/git-cache-a5be8bcc9ddf/b806511b887776c1f9ab349a377350b8c9c069f1'...
28 verbose cloneResolved done.
29 info git [ 'checkout', 'b806511b887776c1f9ab349a377350b8c9c069f1' ]
30 verbose checkoutTreeish elixir-lang/elixir checkout Note: checking out 'b806511b887776c1f9ab349a377350b8c9c069f1'.
30 verbose checkoutTreeish
30 verbose checkoutTreeish You are in 'detached HEAD' state. You can look around, make experimental
30 verbose checkoutTreeish changes and commit them, and you can discard any commits you make in this
30 verbose checkoutTreeish state without impacting any branches by performing another checkout.
30 verbose checkoutTreeish
30 verbose checkoutTreeish If you want to create a new branch to retain commits you create, you may
30 verbose checkoutTreeish do so (now or later) by using -b with the checkout command again. Example:
30 verbose checkoutTreeish
30 verbose checkoutTreeish   git checkout -b <new-branch-name>
30 verbose checkoutTreeish
30 verbose checkoutTreeish HEAD is now at b806511... Merge pull request #4501 from bausmeier/fix-typos
31 error addLocal Could not install /var/folders/k3/7qbqfpr96d914l00mt4fmlgw0000gn/T/npm-45133-bdeb96d3/git-cache-a5be8bcc9ddf/b806511b887776c1f9ab349a377350b8c9c069f1
32 silly tryHTTPS attempting to clone git+https://github.com/elixir-lang/elixir.git
33 silly tryClone cloning elixir-lang/elixir via git+https://github.com/elixir-lang/elixir.git
34 verbose tryClone https-github-com-elixir-lang-elixir-git-6418fe18 not in flight; caching
35 info git [ 'clone',
35 info git   '--template=/Users/Jake/.npm/_git-remotes/_templates',
35 info git   '--mirror',
35 info git   'https://github.com/elixir-lang/elixir.git',
35 info git   '/Users/Jake/.npm/_git-remotes/https-github-com-elixir-lang-elixir-git-6418fe18' ]
36 verbose mirrorRemote elixir-lang/elixir git clone https://github.com/elixir-lang/elixir.git
37 verbose setPermissions elixir-lang/elixir set permissions on /Users/Jake/.npm/_git-remotes/https-github-com-elixir-lang-elixir-git-6418fe18
38 verbose resolveHead elixir-lang/elixir original treeish: master
39 info git [ 'rev-list', '-n1', 'master' ]
40 silly resolveHead elixir-lang/elixir resolved treeish: b806511b887776c1f9ab349a377350b8c9c069f1
41 verbose resolveHead elixir-lang/elixir resolved Git URL: git+https://github.com/elixir-lang/elixir.git#b806511b887776c1f9ab349a377350b8c9c069f1
42 silly resolveHead Git working directory: /var/folders/k3/7qbqfpr96d914l00mt4fmlgw0000gn/T/npm-45133-bdeb96d3/git-cache-0da1d0d26d37/b806511b887776c1f9ab349a377350b8c9c069f1
43 info git [ 'clone',
43 info git   '/Users/Jake/.npm/_git-remotes/https-github-com-elixir-lang-elixir-git-6418fe18',
43 info git   '/var/folders/k3/7qbqfpr96d914l00mt4fmlgw0000gn/T/npm-45133-bdeb96d3/git-cache-0da1d0d26d37/b806511b887776c1f9ab349a377350b8c9c069f1' ]
44 verbose cloneResolved elixir-lang/elixir clone Cloning into '/var/folders/k3/7qbqfpr96d914l00mt4fmlgw0000gn/T/npm-45133-bdeb96d3/git-cache-0da1d0d26d37/b806511b887776c1f9ab349a377350b8c9c069f1'...
44 verbose cloneResolved done.
45 info git [ 'checkout', 'b806511b887776c1f9ab349a377350b8c9c069f1' ]
46 verbose checkoutTreeish elixir-lang/elixir checkout Note: checking out 'b806511b887776c1f9ab349a377350b8c9c069f1'.
46 verbose checkoutTreeish
46 verbose checkoutTreeish You are in 'detached HEAD' state. You can look around, make experimental
46 verbose checkoutTreeish changes and commit them, and you can discard any commits you make in this
46 verbose checkoutTreeish state without impacting any branches by performing another checkout.
46 verbose checkoutTreeish
46 verbose checkoutTreeish If you want to create a new branch to retain commits you create, you may
46 verbose checkoutTreeish do so (now or later) by using -b with the checkout command again. Example:
46 verbose checkoutTreeish
46 verbose checkoutTreeish   git checkout -b <new-branch-name>
46 verbose checkoutTreeish
46 verbose checkoutTreeish HEAD is now at b806511... Merge pull request #4501 from bausmeier/fix-typos
47 error addLocal Could not install /var/folders/k3/7qbqfpr96d914l00mt4fmlgw0000gn/T/npm-45133-bdeb96d3/git-cache-0da1d0d26d37/b806511b887776c1f9ab349a377350b8c9c069f1
48 silly trySSH attempting to clone git@github.com:elixir-lang/elixir.git
49 silly tryClone cloning elixir-lang/elixir via git@github.com:elixir-lang/elixir.git
50 verbose tryClone git-github-com-elixir-lang-elixir-git-350cf216 not in flight; caching
51 info git [ 'clone',
51 info git   '--template=/Users/Jake/.npm/_git-remotes/_templates',
51 info git   '--mirror',
51 info git   'git@github.com:elixir-lang/elixir.git',
51 info git   '/Users/Jake/.npm/_git-remotes/git-github-com-elixir-lang-elixir-git-350cf216' ]
52 error git clone --template=/Users/Jake/.npm/_git-remotes/_templates --mirror git@github.com:elixir-lang/elixir.git /Users/Jake/.npm/_git-remotes/git-github-com-elixir-lang-elixir-git-350cf216: Cloning into bare repository '/Users/Jake/.npm/_git-remotes/git-github-com-elixir-lang-elixir-git-350cf216'...
52 error git clone --template=/Users/Jake/.npm/_git-remotes/_templates --mirror git@github.com:elixir-lang/elixir.git /Users/Jake/.npm/_git-remotes/git-github-com-elixir-lang-elixir-git-350cf216: Permission denied (publickey).
52 error git clone --template=/Users/Jake/.npm/_git-remotes/_templates --mirror git@github.com:elixir-lang/elixir.git /Users/Jake/.npm/_git-remotes/git-github-com-elixir-lang-elixir-git-350cf216: fatal: Could not read from remote repository.
52 error git clone --template=/Users/Jake/.npm/_git-remotes/_templates --mirror git@github.com:elixir-lang/elixir.git /Users/Jake/.npm/_git-remotes/git-github-com-elixir-lang-elixir-git-350cf216:
52 error git clone --template=/Users/Jake/.npm/_git-remotes/_templates --mirror git@github.com:elixir-lang/elixir.git /Users/Jake/.npm/_git-remotes/git-github-com-elixir-lang-elixir-git-350cf216: Please make sure you have the correct access rights
52 error git clone --template=/Users/Jake/.npm/_git-remotes/_templates --mirror git@github.com:elixir-lang/elixir.git /Users/Jake/.npm/_git-remotes/git-github-com-elixir-lang-elixir-git-350cf216: and the repository exists.
53 verbose stack Error: Command failed: git clone --template=/Users/Jake/.npm/_git-remotes/_templates --mirror git@github.com:elixir-lang/elixir.git /Users/Jake/.npm/_git-remotes/git-github-com-elixir-lang-elixir-git-350cf216
53 verbose stack Cloning into bare repository '/Users/Jake/.npm/_git-remotes/git-github-com-elixir-lang-elixir-git-350cf216'...
53 verbose stack Permission denied (publickey).
53 verbose stack fatal: Could not read from remote repository.
53 verbose stack
53 verbose stack Please make sure you have the correct access rights
53 verbose stack and the repository exists.
53 verbose stack
53 verbose stack     at ChildProcess.exithandler (child_process.js:203:12)
53 verbose stack     at emitTwo (events.js:87:13)
53 verbose stack     at ChildProcess.emit (events.js:172:7)
53 verbose stack     at maybeClose (internal/child_process.js:818:16)
53 verbose stack     at Socket.<anonymous> (internal/child_process.js:319:11)
53 verbose stack     at emitOne (events.js:77:13)
53 verbose stack     at Socket.emit (events.js:169:7)
53 verbose stack     at Pipe._onclose (net.js:469:12)
54 verbose cwd /Users/Jake/Desktop/librasoft
55 error Darwin 15.3.0
56 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "install" "elixir-lang/elixir"
57 error node v4.2.1
58 error npm  v2.14.7
59 error code 128
60 error Command failed: git clone --template=/Users/Jake/.npm/_git-remotes/_templates --mirror git@github.com:elixir-lang/elixir.git /Users/Jake/.npm/_git-remotes/git-github-com-elixir-lang-elixir-git-350cf216
60 error Cloning into bare repository '/Users/Jake/.npm/_git-remotes/git-github-com-elixir-lang-elixir-git-350cf216'...
60 error Permission denied (publickey).
60 error fatal: Could not read from remote repository.
60 error
60 error Please make sure you have the correct access rights
60 error and the repository exists.
61 error If you need help, you may report this error at:
61 error     <https://github.com/npm/npm/issues>
62 verbose exit [ 1, true ]
